"use strict";
// Представьте, что у вас есть класс для управления библиотекой. В этом классе будет приватное свойство для хранения списка книг, а также методы для добавления книги, удаления книги и получения информации о наличии книги.

// Класс должен содержать приватное свойство #books, которое инициализируется пустым массивом и представляет собой список книг в библиотеке.

// Реализуйте геттер allBooks, который возвращает текущий список книг.

// Реализуйте метод addBook(title), который позволяет добавлять книгу в список. Если книга с таким названием уже существует в списке, выбросьте ошибку с соответствующим сообщением.

// Реализуйте метод removeBook(title), который позволит удалять книгу из списка по названию. Если книги с таким названием нет в списке, выбросьте ошибку с соответствующим сообщением.

// Реализуйте метод hasBook(title), который будет проверять наличие книги в библиотеке и возвращать true или false в зависимости от того, есть ли такая книга в списке или нет.

// Реализуйте конструктор, который принимает начальный список книг (массив) в качестве аргумента. Убедитесь, что предоставленный массив не содержит дубликатов; в противном случае выбрасывайте ошибку.

class Library {
    #books = [];

    constructor(books) {
        if (books.some((val, i) => books.indexOf(val) !== i)) {
            throw new Error('Присутствуют дубликаты');
        }
        this.#books = books;
    }

    get allBooks() {
        return this.#books;
    }

    addBook(title) {
        if (this.#books.some(x => x === title)) {
            throw new Error('Такая книга уже существует');
        }
        this.#books.push(title);
    }

    removeBook(title) {
        if (!this.#books.some(x => x === title)) {
            throw new Error('Такой книги нет');
        }
        this.#books.splice(this.#books.indexOf(title), 1)
    }

    hasBook(title) {
        this.#books.some(x => x === title) ? true : false;
    }
}

const lib = new Library([1, 2, 3]);
// const lib = new Library([1, 1, 3]);

lib.addBook('book1');
// console.log(lib.allBooks);

lib.removeBook('book1');
// console.log(lib.allBooks);
